security:
    encoders:
        App\Entity\User:
            algorithm: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    role_hierarchy:
        ROLE_SUPER_ADMIN: ROLE_USER # swaape

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        registration:
            pattern: ^/api/users
            anonymous: true
            stateless: true
            methods: [POST]
 
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure
      
        api:
            pattern:   ^/api
            stateless: true
            anonymous: true
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: lazy

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/events, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/networks, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/network_types, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/jobs, roles: IS_AUTHENTICATED_FULLY, methods: [POST, PUT, DELETE] }
        - { path: ^/api/services, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/companies, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/tickets, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/user_events, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/categories, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/posts, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/sponsorships, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/working_sectors, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/colors, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/notifications, roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/activities, roles: IS_AUTHENTICATED_FULLY, methods: [POST, PUT, DELETE] }
        - { path: ^/api/relationships, roles: IS_AUTHENTICATED_FULLY, methods: [POST, DELETE] }
        - { path: ^/api/user_registrations, roles: IS_AUTHENTICATED_FULLY, methods: [POST, DELETE] }
        - { path: ^/api/home, roles: IS_AUTHENTICATED_FULLY, methods: [GET] }
        - { path: ^/api/users,roles: IS_AUTHENTICATED_FULLY ,methods: [GET, PUT, DELETE] }
        - { path: ^/api/customers,roles: IS_AUTHENTICATED_FULLY ,methods: [GET, PUT, DELETE] }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
