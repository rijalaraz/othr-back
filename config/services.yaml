# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    public_path: '%kernel.project_dir%/public'
    upload_dir: 'uploads'
    upload_max_file_size: 2097152
    tokenLifeTime: '%env(TOKEN_LIFETIME)%'
    stripe_api_key: '%env(STRIPE_SECRET_KEY)%'
    mailer_dsn: '%env(MAILER_DSN)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $collectionExtensions: !tagged api_platform.doctrine.orm.query_extension.collection
            $itemExtensions: !tagged api_platform.doctrine.orm.query_extension.item

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    App\EventListener\JwtCreatedListener:
        class: App\EventListener\JwtCreatedListener
        tags:
            - { name: kernel.event_listener, event: lexik_jwt_authentication.on_jwt_created, method: updateJwtData }

    App\Filter\CountOrderFilter:
        # Uncomment only if autoconfiguration isn't enabled
        tags: [ 'api_platform.filter' ]

    App\Security\NotificationVoter:
        public: false
        tags:
            - { name: security.voter }

    App\Serializer\UserNormalizer:
        decorates: 'api_platform.jsonld.normalizer.item'
        arguments: [ '@App\Serializer\UserNormalizer.inner' ]

    App\Serializer\PostNormalizer:
        decorates: 'api_platform.jsonld.normalizer.item'
        arguments: [ '@App\Serializer\PostNormalizer.inner' ]

    App\DataPersister\NotificationDataPersister:
        decorates: 'api_platform.doctrine.orm.data_persister'

    App\DataPersister\UserEventDataPersister:
        decorates: 'api_platform.doctrine.orm.data_persister'

    App\DataPersister\PostDataPersister:
        decorates: 'api_platform.doctrine.orm.data_persister'

    App\DataPersister\PostElementDataPersister:
        decorates: 'api_platform.doctrine.orm.data_persister'

    App\DataPersister\UserDataPersister:
        decorates: 'api_platform.doctrine.orm.data_persister'

    App\DataPersister\PaymentDataPersister:
        decorates: 'api_platform.doctrine.orm.data_persister'

    Slot\MandrillBundle\Dispatcher: '@slot_mandrill.dispatcher'

    Stripe\StripeClient:
        arguments:
           $config: '%stripe_api_key%'
